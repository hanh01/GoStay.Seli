@using GoStay.Seli.srcComponent
@using HotelApiV56.Model
@using GoStay.Peter
@using GoStay.Peter.Models.Favorite
@inject Flowbie Flowbie

@if (Listings != null)
{
 <div>
     <section >
         <p class="font-bold tracking-wide text-2xl py-2 text-[#FF0F00]">DANH SÁCH TÌM KIẾM</p>
     </section>
 
     <section class="relative my-1">
         <div class="grid xl:grid-cols-4 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-6 py-5">
             @foreach (var item in Listings)
             {
                 <div class="flex flex-col">
                     <div class="flex justify-end pr-3 -mb-10 z-20">
                         @if ((bool) item.IsFavorite)
                         {
                             @* <button type="button" @onclick="() => Unfavorite(item)"> *@
                             @*     <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 fill-red-600 stroke-white"> *@
                             @*         <path d="M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 01-1.162-.682 22.045 22.045 0 01-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 018-2.828A4.5 4.5 0 0118 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 01-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 01-.69.001l-.002-.001z"/> *@
                             @*     </svg> *@
                             @* </button> *@
                         }
                         else
                         {
                             <button data-modal-data="@item?.Id" data-modal-toggle="nala-modal-add-favorite" type="button" @ontoggle="() => OnToggle(item)">
                                 <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 fill-black/40 stroke-white ">
                                     <path d="M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 01-1.162-.682 22.045 22.045 0 01-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 018-2.828A4.5 4.5 0 0118 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 01-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 01-.69.001l-.002-.001z"/>
                                 </svg>
                             </button>
                         }
                     </div>
                     <SlideImg DataItem="@item" MaxCountImage="MAX_COUNT"></SlideImg>
                     <a href="/detail-rooms/@item?.Id">
                         <div class="pt-3 pb-2 grid xl:grid-cols-6 grid-cols-5 gap-2">
                             <div class="float-left xl:col-span-5 col-span-4">
                                 <p class="text-[#2F3641] text-base font-bold text-ellipsis overflow-hidden">@item?.Name</p>
                             </div>
                             <div class="col-span-1 h-[35px] float-right bg-[#DC3F34] rounded-md grid place-content-center">
                                 <div class="flex gap-0.5 text-white">
                                     <div class="w-3.5 h-full grid content-center  @(item?.Review == null || item.Review.TotalReviewers == 0 ? "hidden" : "")">
                                         <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3.5 h-3.5 ">
                                             <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"/>
                                         </svg>
                                     </div>
                                     <p class="text-sm font-bold">@(item?.Review == null ? "New" : (item.Review.TotalReviewers == 0 ? "New" : String.Format("{0:0.0}", item.Review.Ratings)))</p>
                                 </div>
                             </div>
                         </div>
                         <div class="flex gap-2">
                             <div class="w-5 grid content-center h-full">
                                 <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 stroke-red-500 stroke-2">
                                     <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"/>
                                     <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"/>
                                 </svg>
                             </div>
                             <p class="text-[#5D7293] truncate ">
                                 @item?.Address
                             </p>
                         </div>
                         <p class="text-md font-sans font-bold text-[#2F3641]">
                             @if (item != null)
                             {
                                 @(Helper.ConvertMoney((int) item.Price) + " /" + item?.PriceRateInDay + "ngày")
                             }
                         </p>
                     </a>
                 </div>
             }
         </div>
         <div class="flex justify-center items-center">
             <button class="bg-white border border-[#9BB5C4] py-2 px-5 text-[#9BB5C4] rounded-md">Xem thêm</button>
         </div>
     </section>
 
 </div>   
}


@code{
    private readonly int MAX_COUNT = 5;

    [Parameter]
    public List<ListingzResponse>? Listings { get; set; }
    
    private ListingzResponse? Item { get; set; }
    
    protected override void OnAfterRender(bool firstRender)
    {
        Flowbie.initModal();
    }
    
    private async void OnToggle(ListingzResponse Item)
    {
        var tem = FavoriteResult.fromJson(await Flowbie.getDataModal("nala-modal-add-favorite"));
        if (tem.CollectionId > 0) //addfavortie thanh cong
        {
            Item.IsFavorite = true;
            StateHasChanged();
        }
    }
    // private async void Unfavorite(ListingzResponse Item)
    // {
    //     var data= await Api.GetIns().CollectionPageApi.UnFavoriteAsync(new UnFavoriteRequest("ustrijzwgb",Item.Id));
    //     if (data.CollectionId > 0)
    //     {
    //         Item.IsFavorite = false;
    //     }
    //     StateHasChanged();
    //     
    //
    // }

}
