@using GoStay.Peter
@using GoStay.Peter.Models.ListingDetail
@using GoStay.Seli.srcComponent
@using HotelApiV56.Model
@inject IJSRuntime JSRuntime
@inject Flowbie IFlowbie


@if (ListingDetails != null)
{
    <div class="bg-[url('images/imgHomePage/bgBody.png')] font-sans">
        <header class=" pb-3 bg-[url('images/imgHomePage/bgBody.png')]">
            <div class="w-full h-[100px] lg:h-[172px] bg-[url('images/imgHomePage/navListHome.png')] bg-no-repeat bg-cover">
                <div class="grid content-center h-[85px] shadow-sm font-sans">
                    <div class="container mx-auto px-12">
                        <LayoutLogin></LayoutLogin>
                    </div>
                </div>
            </div>
        </header>
        <div class="lg:-mt-14 -mt-5 sticky top-0 z-30">
            <FormSearch></FormSearch>
        </div>
        <Filter></Filter>
        
        <div class="flex flex-col gap-5 container mx-auto xl:px-14 px-5 my-5 pt-8 text-[#424F64]">
            <HeadPage DataHeadPage="ListingDetails"></HeadPage>
            <div class="grid lg:grid-cols-3 grid-cols-1 flex flex-row my-6 lg:gap-20 gap-0">
                <ColumnLeft Data="ListingDetails"></ColumnLeft>
                <ColumnRight></ColumnRight>
            </div>
            @if (ListingDetails.ListingType != "HomeStay")
            {
                <ListRooms Data="ListingDetails"></ListRooms>
            }
            <Evaluation Data="ListingDetails" Id="@ID"></Evaluation>
            <Regulations></Regulations>
            <InfoHost Data="ListingDetails"></InfoHost>
            <Map></Map>
            <RecentLocation></RecentLocation>
        </div>
        <Footer></Footer>
    </div> 
}


@code {
    private Task<IJSObjectReference>? _module;
    const string ImportPath = "./_content/GoStay.Seli/js/index.js";
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import",
    ImportPath).AsTask();
    private int _heightScroll = 125;
    
    [Parameter]
    public long ID { get; set; }
    
    private GohomeListingDetailForCus? ListingDetails { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        ListingDetails = await Api.GetIns().ListingNewDetailPageApi.GetListingsByIDAsync(ID);
        await InvokeAsync(() => StateHasChanged());
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var module = await Module;
        await module.InvokeVoidAsync("Seli.scrollFormSearch",_heightScroll);
        IFlowbie.initModal();  
    }


}
