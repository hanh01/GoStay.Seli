@using GoStay.Peter.Models.ListingDetail
@using GoStay.Peter
@using HotelApiV56.Model
@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation
@inject Flowbie Flowbie

<div>
    <div class="flex justify-between text-[#5D7293] leading-9">
        <div class="flex flex-col">
            <p class="text-[#424F64] text-2xl font-bold tracking-wider">@DataHeadPage?.Name</p>
            <a href="/detail-home-stay" class="flex gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"/>
                </svg>
                <span class="text-base hover:text-[#5A89D2] hover:underline hover:underline-offset-4 leading-8">@DataHeadPage?.Address</span>
            </a>
        </div>
        <div class="flex flex-col">
            <div class="flex gap-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z"/>
                </svg>
                <div class="float-right bg-[#DC3F34] rounded-md grid place-content-center">
                    <div class="flex gap-0.5 text-white px-2">
                        <div class="w-3.5 h-full grid content-center  @(DataHeadPage?.ReviewSummary == null || DataHeadPage.ReviewSummary.TotalReviewers == 0 ? "hidden" : "")">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3.5 h-3.5 ">
                                <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <p class="text-sm font-bold">@(DataHeadPage?.ReviewSummary == null ? "New" : (DataHeadPage.ReviewSummary.TotalReviewers == 0 ? "New" : String.Format("{0:0.0}", DataHeadPage.ReviewSummary.Ratings)))</p>
                    </div>
                </div>
            </div>
            <p class="underline underline-offset-4 hover:text-[#5A89D2] grid place-content-end">@(DataHeadPage?.ReviewSummary == null || DataHeadPage.ReviewSummary.TotalReviewers == 0 ? "0" : DataHeadPage.ReviewSummary.TotalReviewers) đánh giá</p>
        </div>
    </div>
    <div class="relative">
        <div class="grid grid-cols-4 grid-flow-col grid-rows-2 gap-2 lg:h-[600px] h-[300px] rounded-xl overflow-hidden">
            @for (int i = 0; i < ImageUrl.Length; i++)
            {
                if (i == 0)
                {
                    <div class="relative md:col-span-2 col-span-4 row-span-2 overflow-hidden cursor-pointer" type="button" data-modal-toggle="modelSlider"  data-modal-data="@i">
                        <img class="w-full h-full hover:scale-110  transition duration-700 ease-in-out" src="@ImageUrl[i]" alt="">
                    </div>
                }
                else
                {
                    <div class="relative md:flex hidden col-span-1 row-span-1 cursor-pointer" type="button" data-modal-toggle="modelSlider"  data-modal-data="@i">
                        <img class="w-full h-full " src="@ImageUrl[i]" alt="">
                        <div class="absolute top-0  right-0 bottom-0 left-0 w-full h-full rounded-md overflow-hidden bg-fixed opacity-0 hover:opacity-10 transition duration-200 ease-in-out bg-[#000000]"></div>
                    </div>                   
                }
                if (i == 4)
                {
                    break;
                }
            }
        </div>
        
        <div class="absolute float-right right-3 -mt-14">
            <button data-modal-toggle="view-all-image" @onclick="HideScroll" type="button" class="bg-white rounded-full py-2 px-2 inline-flex items-center hover:text-orange-700">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"/>
                </svg>
                <span class="pl-3">Xem tất cả ảnh (@ImageUrl.Length)</span>
            </button>
        </div>
    </div>
</div>

<ViewAllImage PictureUrls="ImageUrl"></ViewAllImage>

@code {
    private Task<IJSObjectReference>? _module;
        const string ImportPath = "./_content/GoStay.Seli/js/index.js";
    private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import",
        ImportPath).AsTask();
    
    [Parameter]
    public GohomeListingDetailForCus? DataHeadPage { get; set; }
    
    string[] ImageUrl { get; set; } = {};
    string[] PictureUrls { get; set; } = {};
    string? ValueScroll { get; set; }
    
    protected override void OnParametersSet()
    {
        if (DataHeadPage != null)
        {
             ImageUrl = DataHeadPage?.ThumbnailUrls.Split("\n");
             // PictureUrls = DataHeadPage?.PictureUrls.Split("\n");
        }

        InvokeAsync(() => StateHasChanged());
        
        Flowbie.initModal();
    }

    private async void HideScroll()
    {
        ValueScroll = "hidden";
        var module = await Module;
        await module.InvokeVoidAsync("Seli.hideScroll",ValueScroll);
    }
}